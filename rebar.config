{erl_opts,
 [ debug_info
 , warn_export_vars
 , warn_unused_import
 , warn_missing_spec
 , warn_untyped_record
 ]}.

{deps, [{getopt, "1.0.1"}]}.

{escript_incl_apps, [concuerror, getopt]}.
{escript_main_app, concuerror}.
{escript_name, concuerror}.
{escript_emu_args, "%%! +S1 -boot start_clean -noshell -pa . -pa ebin\n"}.

{pre_hooks,
 [ {compile, "priv/generate_version_hrl 22 > src/concuerror_otp_version.hrl"}
 , {edoc, "priv/generate_option_docfiles doc"}
 ]}.

{post_hooks,
 [ {escriptize, "cp \"$REBAR_BUILD_DIR/bin/concuerror\" ./bin"}
 , {eunit, "cp \"$REBAR_BUILD_DIR/cover/eunit.coverdata\" ./cover"}
 ]}.

{profiles,
 [ {dev,
    [ {erl_opts, [{d, 'DEV', "true"}]}
    ]}
 , {docs,
    [ {erl_opts, [{d, 'DOC', "true"}]}
    ]}
 , {lint,
    [ {plugins, [{rebar3_lint, "0.1.10"}]}
    ]}
 , {native,
    [ {erl_opts, [native]}
    ]}
 , {pedantic,
    [ {erl_opts, [warnings_as_errors]}
    ]}
 , {test,
    [ {erl_opts, [export_all, nowarn_missing_spec]}
    ]}
 ]}.

{edoc_opts,
 [ {macros, [{'DOC', "true"}]}
 , {preprocess, true}
 , {title, "Concuerror's API specification"}
 ]}.

{dialyzer,
 [ {warnings,
    [ unmatched_returns
    , unknown
    ]}
 , {base_plt_apps,
    [ compiler
    , crypto
    , erts
    , getopt
    , kernel
    , stdlib
    , tools
    ]}
 ]}.

{cover_enabled, true}.
{cover_export_enabled, true}.
